{
  "extends": [
    "config:base",
    ":dependencyDashboard",
    ":gitSignOff",
    ":prHourlyLimit4",
    ":semanticCommits",
    ":prConcurrentLimit10"
  ],
  "schedule": [
    "before 11pm"
  ],
  "packageRules": [
    {
      "matchUpdateTypes": [
        "major"
      ],
      "enabled": true,
      "commitBody": "BREAKING CHANGE: major release of {{depName}}"
    },
    {
      "matchUpdateTypes": ["major", "minor", "patch"],
      "semanticCommitScope": "{{baseDir}}",
      "semanticCommitType": "{{#if isPatch}}fix{{else}}feat{{/if}}"
    },
    {
      "description": "Group Conda and Miniforge",
      "matchPackagePatterns": ["^conda[^\\s]+?[a-z-].*"],
      "groupName": "conda",
      "additionalBranchPrefix": ""
    },
    {
      "description": "Group TensorFlow Docker Tags",
      "matchPackagePatterns": ["^kubeflownotebooks\/jupyter-tensorflow[-cuda]?"],
      "matchDatasources": ["docker"],
      "groupName": "kubeflownotebooks/jupyter-tensorflow",
      "additionalBranchPrefix": ""
    },
    {
      "description": "Group PyTorch Docker Tags",
      "matchPackagePatterns": ["^kubeflownotebooks\/jupyter-pytorch[-cuda]?"],
      "matchDatasources": ["docker"],
      "groupName": "kubeflownotebooks/jupyter-pytorch",
      "additionalBranchPrefix": ""
    },
    {
      "description": "Group PyTorch packages",
      "matchPackagePatterns": ["^torch*[a-z-].*"],
      "groupName": "pytorch",
      "versioning": "regex:^(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)(?<prerelease>[^.-]+)?(-(?<compatibility>.*))?$"
    },
    {
      "description": "Automerge everything",
      "matchUpdateTypes": ["major", "minor", "patch"],
      "automerge": true,
      "automergeType": "pr",
      "platformAutomerge": true
    }
  ],
  "labels": [
    "dependencies"
  ],
  "separateMinorPatch": true,
  "regexManagers": [
    {
      "fileMatch": [
        "(^|/|\\.)Dockerfile$",
        "(^|/)Dockerfile\\.[^/]*$"
      ],
      "matchStrings": [
        "# renovate: datasource=(?<datasource>[a-z-]+?) depName=(?<depName>[^\\s]+?)(?: lookupName=(?<lookupName>[^\\s]+?))?(?: versioning=(?<versioning>[a-z-]+?))?\\s(?:ENV|ARG) .+?_VERSION=(?<currentValue>.*)?"
      ]
    }
  ]
}
